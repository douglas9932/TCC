unit UContasaPagar;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, UDM, UFrame, Data.DB, Vcl.Menus,
  Vcl.Grids, Vcl.DBGrids, Vcl.DBCtrls, Vcl.StdCtrls, Vcl.Mask;

type
  TFContasaPagar = class(TForm)
    Frame11: TFrame1;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    DBEdit5: TDBEdit;
    Label6: TLabel;
    DBEdit6: TDBEdit;
    Label7: TLabel;
    DBEdit7: TDBEdit;
    Label8: TLabel;
    DBEdit8: TDBEdit;
    Label9: TLabel;
    Label10: TLabel;
    DBMemo1: TDBMemo;
    DBComboBox1: TDBComboBox;
    DBText1: TDBText;
    DBText3: TDBText;
    DBText2: TDBText;
    DBLookupComboBox1: TDBLookupComboBox;
    DBGrid1: TDBGrid;
    PopupMenu1: TPopupMenu;
    PagarConta1: TMenuItem;
    Cancelar1: TMenuItem;
    procedure PagarConta1Click(Sender: TObject);
    procedure Frame11BTNovoClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FContasaPagar: TFContasaPagar;

implementation

{$R *.dfm}

procedure TFContasaPagar.Frame11BTNovoClick(Sender: TObject);
begin
Frame11.BTNovoClick(Sender);

  DM.TBContasAReceber.Insert;

  DM.TBContasAPagarCONTROLE.AsString := 'MANUAL';
  DM.TBContasAPagarDATACOMPRA.AsDateTime:=DATE;
  DM.TBContasAPagarSTATUSCOMPRASAPAGAR.AsString:='PENDENTE';
  DM.TBContasAPagarHORA.AsDateTime:=Time;

end;

procedure TFContasaPagar.PagarConta1Click(Sender: TObject);
begin
 if Dm.TBContasAPagarSTATUSCOMPRASAPAGAR.AsString = 'CONF'
    then
    begin
    Showmessage('Conta ja Recebida');
    abort;
    end
    else
    if Dm.TBCaixaSTATUSCAIXA.AsString = 'FECHADO' then
    Begin
    showmessage('Nao e posssivel receber uma conta com o caixa Fechado');
    Abort;
    End
    else
    Dm.TBContasAPagar.Edit;
    Dm.TBContasAPagarSTATUSCOMPRASAPAGAR.AsString:= 'CONF';
    Dm.TBContasAPagar.Post;
    DM.TBContasAPagar.Refresh;
    //Inserir Parcela
    Dm.TBParcelaContaAPagar.Insert;
    Dm.TBParcelaContaAPagarIDCONTASAPAGAR.AsInteger:=
    DM.TBContasAPagarIDCONTASAPAGAR.AsInteger;
    Dm.TBParcelaContaAPagarVALOR.AsFloat:=
    DM.TBContasAPagarVALORCONTASAPAGAR.AsFloat;
    Dm.TBParcelaContaAPagarSTATUSPARCELASCONTASAPAGAR.AsString:='CONF';
    Dm.TBParcelaContaAPagar.Post;
    Dm.TBParcelaContaAPagar.Refresh;
    //inserir recebimento
    DM.TBPagamento.Insert;
    DM.TBPagamentoIDPARCELASCONTASAPAGAR.AsInteger:=
    DM.TBParcelaContaAPagarIDPARCELASCONTASAPAGAR.AsInteger;
    Dm.TBPagamentoVALORDOPAGAMENTO.AsFloat:=
    DM.TBParcelaContaAPagarVALOR.AsFloat;
    Dm.TBPagamentoHORA.AsDateTime:=Time;
    DM.TBPagamentoDATAPAGAMENTO.AsDateTime:= Date;
    Dm.TBPagamento.Post;
    Dm.TBPagamento.Refresh;
    //Inserir Caixa
    DM.TBCaixa.Edit;
    DM.TBCaixaIDPAGAMENTO.AsInteger:=
    DM.TBPagamentoIDPAGAMENTO.AsInteger;
    DM.TBCaixaVALORSAIDA.AsFloat:=
    DM.TBCaixaVALORSAIDA.AsFloat-DM.TBPagamentoVALORDOPAGAMENTO.AsFloat;
    DM.TBCaixaSALDO.AsFloat:=
    DM.TBCaixaSALDO.AsFloat-DM.TBPagamentoVALORDOPAGAMENTO.AsFloat;
    DM.TBCaixa.Post;
    DM.TBCaixa.Refresh;


end;

end.
